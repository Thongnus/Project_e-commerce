# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
# services:
#   server:
#     build:
#       context: .
#     ports:
#       - 11:11
#   be:
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt
version: '3'
services:
  spring-boot-app:
    image: backend-spring
    ports:
      - "8085:8080"
    depends_on:
      - mysql-db
   # develop là quá trình phát hiện thay đổi , sẽ tự động build lại container  
    develop:
     watch:
       - action: rebuild
       - path: .
    environment:  
     
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/projectbanhang?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: 'true'
      SPRING_JPA_SHOW_SQL: 'true'
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: 'org.hibernate.dialect.MySQL8Dialect'
      SPRING_JPA_HIBERNATE_DDL_AUTO: 'none'
  mysql-db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1
      MYSQL_DATABASE: projectbanhang?createDatabaseIfNotExist
      MYSQL_USER: admin
      MYSQL_PASSWORD: 123456
    ports:
      - "3307:3306"
    restart: 
      always
    volumes:
    - app-data:/var/lib/mysql  
    
volumes:
     app-data:


